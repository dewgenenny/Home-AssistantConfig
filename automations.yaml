# Location based automation


- id: heating_up_when_jane_on_way_home
  alias: Heating up when Jane on way home
  trigger:
    platform: zone
    entity_id: device_tracker.janes_phone
    zone: zone.Braunschweig
    # Event is either enter or leave
    event: leave  # or "leave"
  action:
  - service: scene.turn_on
    entity_id: scene.here_temps
  - service: notify.html5push
    data:
      message: "Turned heating up"

- id: message_jane_when_toms_on_way_home
  alias: Message Jane when Toms on way home
  trigger:
    platform: zone
    entity_id: device_tracker.toms_phone
    zone: zone.Work
    # Event is either enter or leave
    event: leave  # or "leave"
  action:
  - service: notify.html5push_jane_phone
    data:
      message: "Hurray!!! Tom is on his way home"


- id: noonehome
  alias: Turn off lights & PCs when we leave
  trigger:
    platform: state
    entity_id: group.tracked_people
    to: not_home
    for:
      hours: 0
      minutes: 10
      seconds: 0
  action:
  - service: light.turn_off
    entity_id: group.all_lights
  - service: shell_command.sleep_tom
  - service: shell_command.sleep_peter
  - service: homeassistant.turn_off
    entity_id: switch.conservatory_light 
  - service: homeassistant.turn_on #start motion alerting for cameras
    entity_id: switch.carport_camera
  - service: homeassistant.turn_on #start motion alerting for cameras
    entity_id: switch.frontdoor_camera
  - service: homeassistant.turn_on #start motion alerting for cameras
    entity_id: switch.garden_camera
  - service: notify.html5push
    data:
      message: "Arming cameras"



- id: vacuum_upstairs
  alias: Vacuum upstairs when we're out
  trigger:
    platform: state
    entity_id: group.tracked_people
    to: not_home
    for:
      hours: 0
      minutes: 10
      seconds: 0
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: input_boolean.stuart_run
      state: 'off'
    - condition: time
      weekday:
      - mon
      - wed
      - fri 
  action:
  - service: notify.html5push
    data:
      message: "Stewarts cleaning upstairs"
  - service: homeassistant.turn_on
    entity_id: switch.stuart
  - delay: 00:00:05
  - service: homeassistant.turn_off
    entity_id: switch.stuart
  - delay: 00:00:05
  - service: homeassistant.turn_on
    entity_id: switch.stuart
  - service: homeassistant.turn_on
    entity_id: input_boolean.stuart_run


- id: vacuum_downstairs
  alias: Vacuum downstairs when we're out
  trigger:
    platform: state
    entity_id: group.tracked_people
    to: not_home
    for:
      hours: 0
      minutes: 10
      seconds: 0
  condition:
  - condition: state
    entity_id: input_boolean.jackie_run
    state: 'off'
  action:
  - service: notify.html5push
    data:
      message: "Jackies cleaning downstairs"
  - service: vacuum.turn_on
    entity_id: vacuum.xiaomi_vacuum_cleaner
  - service: homeassistant.turn_on
    entity_id: input_boolean.jackie_run



- id: notifywhenjackiecomplete
  alias: Notify when Jackie finishes 
  trigger:
    platform: state
    entity_id: vacuum.xiaomi_vacuum_cleaner
    from: 'on'
    to: 'off'
  action:
  - service: notify.html5push
    data:
      message: "Jackies finished cleaning"









- id: heaters_low
  alias: Reduce heating when we're out
  trigger:
    platform: state
    entity_id: group.tracked_people
    to: not_home
    for:
      hours: 0
      minutes: 30
      seconds: 0
  action:
  - service: scene.turn_on
    entity_id: scene.away_temps
  - service: notify.html5push
    data:
      message: "Turning down heating, no one home"
      data:
        actions:
        - action: reset
          icon: "/static/icons/favicon-192x192.png"
          title: Set back to 20

- id: heaters_up_when_arrive_home
  alias: Increase heating when we're back
  trigger:
    platform: state
    entity_id: group.tracked_people
    to: home
  condition:
    condition: and
    conditions:
    - condition: time
      after: '05:30:00'
    - condition: time
      before: '22:30:00'
  action:
  - service: scene.turn_on
    entity_id: scene.here_temps
  - service: notify.html5push
    data:
      message: "Turning up heating, welcome home!"


- id: lights_on_when_arrive_home
  alias: Turn on lights when we're back
  trigger:
    platform: state
    entity_id: group.tracked_people
    to: home
  condition:
    condition: and
    conditions:
    - condition: sun
      after: sunset
      before_offset: -02:00:00
  action:
  - service: scene.turn_on
    entity_id: scene.CosyUp
  - service: light.turn_on
    entity_id: light.frontdoor_light


- id: turn_off_motion_alarming_when_home
  alias: Turn off motion alarming when we're home
  trigger:
    platform: state
    entity_id: group.tracked_people
    to: home
  action:
  - service: homeassistant.turn_off
    entity_id: switch.carport_camera
  - service: homeassistant.turn_off
    entity_id: switch.frontdoor_camera
  - service: homeassistant.turn_off
    entity_id: switch.garden_camera
  - service: notify.html5push
    data:
      message: "Disarming cameras"








- id: nicewakeup
  alias: "Wake me up with bedroom light transition for weekdays"
  trigger:
    - platform: time
      minutes: '/1'
      seconds: 0
  condition:
    - condition: state
      entity_id: input_boolean.alarmweekon
      state: 'on'
    - condition: state
      entity_id: input_boolean.alarmweekday
      state: 'on'
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
    - condition: template
      value_template: '{{ now().strftime("%H:%M") == states.sensor.alarm_time.state }}'
  action:
    - service: light.turn_on
      entity_id: light.bedside_lamp
      data:
        brightness: 1
        kelvin: 5600
    - service: light.turn_on
      entity_id: light.bedside_lamp
      data:
        transition: 1800
        kelvin: 5600
        brightness: 255
    - delay: 00:30:00
    - service: media_player.shuffle_set
      data:
        shuffle: true
    - service: media_player.select_source
      data:
        entity_id: media_player.spotify
        source: Bedroom
    - service: media_player.volume_set
      data:
        entity_id: media_player.spotify
        volume_level: 0.1
    - service: media_player.play_media
      data:
        entity_id: media_player.spotify
        media_content_type: playlist
        media_content_id: spotify:user:dewgenenny:playlist:3svjBTYu3sETWQuKRudkCk
    - service: light.turn_on
      entity_id: light.bedroom
      data:
        brightness: 1
    - service: light.turn_on
      entity_id: light.bedroom
      data:
        transition: 300
        brightness: 255

- id: niceweekendwakeup
  alias: "Wake me up with bedroom light transition for weekend days"
  trigger:
    - platform: time
      minutes: '/1'
      seconds: 0
  condition:
    - condition: state
      entity_id: input_boolean.alarmweekon
      state: 'on'
    - condition: state
      entity_id: input_boolean.alarmweekday
      state: 'off'
    - condition: time
      weekday:
        - sat
        - sun
    - condition: template
      value_template: '{{ now().strftime("%H:%M") == states.sensor.alarm_time.state }}'
  action:
    - service: light.turn_on
      entity_id: light.bedside_lamp
      data:
        brightness: 1
        kelvin: 5600
    - service: light.turn_on
      entity_id: light.bedside_lamp
      data:
        transition: 1800
        kelvin: 5600
        brightness: 255
    - delay: 00:30:00
    - service: media_player.shuffle_set
      data:
        shuffle: true
    - service: media_player.select_source
      data:
        entity_id: media_player.spotify
        source: Bedroom
    - service: media_player.volume_set
      data:
        entity_id: media_player.spotify
        volume_level: 0.1
    - service: media_player.play_media
      data:
        entity_id: media_player.spotify
        media_content_type: playlist
        media_content_id: spotify:user:dewgenenny:playlist:3svjBTYu3sETWQuKRudkCk
    - service: light.turn_on
      entity_id: light.bedroom
      data:
        brightness: 1
    - service: light.turn_on
      entity_id: light.bedroom
      data:
        transition: 300
        brightness: 255


- id: FrontDoorLightWhenHome
  alias: Turn on porch light when we're home & its getting dark
  trigger:
    platform: sun
    event: sunset
    offset: -01:30:00
  condition:
    condition: or
    conditions:
    - condition: state
      entity_id: device_tracker.janes_phone
      state: home
    - condition: state
      entity_id: device_tracker.toms_phone
      state: home
  action:
  - service: homeassistant.turn_on
    entity_id: switch.frontdoor_light

- id: CosyUp
  alias: Living room and porch lights on if it gets darker outside
  trigger:
    platform: numeric_state
    entity_id: sensor.outside_brightness
    below: 55
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: input_boolean.in_bed
      state: 'off'
    - condition: or
      conditions:
      - condition: state
        entity_id: device_tracker.janes_phone
        state: home
      - condition: state
        entity_id: device_tracker.toms_phone
        state: home
  action:
  - service: scene.turn_on
    entity_id: scene.CosyUp
  - service: light.turn_on
    entity_id: light.frontdoor_light

- id: CosyUpOff
  alias: Turn off living room and porch lights if it gets brighter outside
  trigger:
    platform: numeric_state
    entity_id: sensor.outside_brightness
    above: 45
  action:
  - service: scene.turn_on
    entity_id: scene.CosyUpOff
  - service: light.turn_off
    entity_id: light.frontdoor_light


- id: NotifyonPrintFinish
  alias: Notify me when printer is finished
  trigger:
    platform: state
    entity_id: binary_sensor.octoprint_printing
    from: 'on'
    to: 'off'
  action:
  - service: notify.html5push
    data:
      message: "3D print finished"


- id: heatingonvianotification
  alias: Turn heating back up via notification
  trigger:
    platform: event
    event_type: html5_notification.clicked
    event_data:
      action: reset
  action:
  - service: scene.turn_on
    entity_id: scene.here_temps
  - service: notify.html5push
    data:
      message: "Heating set back to 20"
    


- id: longpressvacuum
  alias: Long press vacuum
  trigger:
    platform: event
    event_type: click
    event_data:
      entity_id: binary_sensor.switch_158d0001232e3d
      click_type: long_click_press
  action:
  - service: homeassistant.turn_on
    entity_id: switch.stuart
  - delay: 00:00:05
  - service: homeassistant.turn_off
    entity_id: switch.stuart
  - delay: 00:00:05
  - service: homeassistant.turn_on
    entity_id: switch.stuart
  - service: homeassistant.turn_on
    entity_id: input_boolean.stuart_run
  - service: vacuum.turn_on
    entity_id: vacuum.xiaomi_vacuum_cleaner



- id: switchampon
  alias: Switch amp on or off
  trigger:
    platform: event
    event_type: click
    event_data:
      entity_id: binary_sensor.switch_158d0001232e3d
      click_type: double
  action:
  - service: media_player.toggle
    entity_id: media_player.yamaha_receiver
  - service: homeassistant.toggle
    entity_id: switch.projector_power




- id: AllLtOff
  alias: All Lights Off
  trigger:
    platform: time
    hours: 23
    minutes: 0
    seconds: 0
  action:
  - service: light.turn_off
    entity_id: group.all_lights
  - service: homeassistant.turn_off
    entity_id: switch.conservatory_light
#  - service: climate.set_temperature
#    data:
#      entity_id: group.all_radiators
#      temperature: 18



- id: hallmovementon
  alias: Turn on hall light when there is movement
  trigger:
    platform: state
    entity_id: binary_sensor.motion_sensor_158d000121a54d
    to: 'on'
  action:
  - service: light.turn_on
    entity_id: group.hallway_lights
- id: hallmovementoff
  alias: Turn off hall light 1 minutes after last movement
  trigger:
    platform: state
    entity_id: binary_sensor.motion_sensor_158d000121a54d
    to: 'off'
    for:
      minutes: 1
  action:
  - service: light.turn_off
    entity_id: group.hallway_lights

#- id: lardermovementon
#  alias: Turn on larder light when there is movement
#  trigger:
#    platform: state
#    entity_id: binary_sensor.motion_sensor_158d00016be304
#    to: 'on'
#  action:
#  - service: light.turn_on
#    entity_id: light.larder_light
#- id: lardermovementoff
#  alias: Turn off larder light 1 minutes after last movement
#  trigger:
#    platform: state
#    entity_id: binary_sensor.motion_sensor_158d00016be304
#    to: 'off'
#    for:
#      minutes: 1
#  action:
#  - service: light.turn_off
#    entity_id: light.larder_light


- alias: Larder light on/off based on motion
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_sensor_158d00016be304
      to: 'on'
    - platform: state
      entity_id: binary_sensor.motion_sensor_158d00016be304
      to: 'off'
      for:
        minutes: 0
        seconds: 10
  action:
    service_template: >
      {% if trigger.to_state.state == "on" %}
      homeassistant.turn_on
      {% elif trigger.to_state.state == "off" %}
      homeassistant.turn_off
      {% endif %}
    entity_id: light.larder_light


- id: wsmovementon
  alias: Turn on workshop light when there is movement
  trigger:
    platform: state
    entity_id: binary_sensor.motion_sensor_158d0001db538a
    to: 'on'
  action:
  - service: light.turn_on
    entity_id: light.5ccf7fd2e8d2_19216817858
- id: wsmovementoff
  alias: Turn off workshop light 1 minutes after last movement
  trigger:
    platform: state
    entity_id: binary_sensor.motion_sensor_158d0001db538a
    to: 'off'
    for:
      minutes: 1
  action:
  - service: light.turn_off
    entity_id: light.5ccf7fd2e8d2_19216817858



- id: firstmovementinmorningsignalswereawake
  alias: Note when we get out of bed and turn on lights etc accordingly
  trigger:
    platform: state
    entity_id: binary_sensor.motion_sensor_158d000121a54d
    to: 'on'
  condition:
    condition: and
    conditions:
    - condition: time
      after: 05:30:00
    - condition: time
      before: 09:30:00
  action:
  - service: scene.turn_on
    entity_id: scene.CosyUp
  - service: homeassistant.turn_off
    entity_id: input_boolean.in_bed
  - service: homeassistant.turn_off # turn off motion alerting for cameras
    entity_id: switch.carport_camera
  - service: homeassistant.turn_off # turn off motion alerting for cameras
    entity_id: switch.frontdoor_camera
  - service: homeassistant.turn_off # turn off motion alerting for cameras
    entity_id: switch.garden_camera




- id: Morning
  alias: Start the Day
  trigger:
    platform: time
    hours: 4
    minutes: 30
    seconds: 0
  action:
  - service: homeassistant.turn_off
    entity_id: input_boolean.stuart_run
  - service: homeassistant.turn_off
    entity_id: input_boolean.jackie_run
  - service: scene.turn_on
    entity_id: scene.here_temps


- id: PrepareForBed
  alias: Prepare for Bed
  trigger:
    platform: state
    entity_id: media_player.yamaha_receiver
    from: 'on'
    to: 'off'
  condition:
    condition: time
    after: '20:30:00'
  action:
  - service: script.turn_on
    entity_id: script.projector_off
  - service: scene.turn_on
    entity_id: scene.NightNight
  - service: scene.turn_on
    entity_id: scene.night_temps
  - delay: 00:10:00
  - service: light.turn_on
    entity_id:
    - light.floalt_panel_ws_60x60
    - light.floalt_panel_ws_60x60_2
    data:
      brightness: 10
  - service: homeassistant.turn_on #start motion alerting for cameras
    entity_id: switch.carport_camera
  - service: homeassistant.turn_on #start motion alerting for cameras
    entity_id: switch.frontdoor_camera
  - service: homeassistant.turn_on #start motion alerting for cameras
    entity_id: switch.garden_camera
  - service: homeassistant.turn_on
    entity_id: input_boolean.in_bed
  - service: notify.html5push
    data:
      message: "Arming cameras"



- id: matchbrightness
  alias: Match Outside Brightness
  trigger:
    platform: mqtt
    topic: kleikamp_brightness
  condition:
    condition: and
    conditions:
    - condition: sun
      before: sunset
      before_offset: -02:25:00
    - condition: sun
      after: sunrise
      after_offset: 01:00:00
    - condition: or
      conditions:
      - condition: state
        entity_id: device_tracker.janes_phone
        state: home
      - condition: state
        entity_id: device_tracker.toms_phone
        state: home
  action:
  - service: homeassistant.turn_on
    entity_id: switch.fluxer
  - service: light.turn_on
    entity_id:
    - light.floalt_panel_ws_60x60
    - light.floalt_panel_ws_60x60_2
    data_template:
      brightness: '{{ trigger.payload_json.Brightness }}'

- id: cosyup_button
  alias: "Toggle Living Room lights"
  trigger:
    platform: event
    event_type: click
    event_data:
      entity_id: binary_sensor.switch_158d0001232e3d
      click_type: single
  action:
  - service: homeassistant.toggle
    entity_id: group.living_room
  - service: notify.html5push
    data_template:
      message: "Living room lights turned {{ states.group.living_room.state }}"



- id: media_player_stopped
  alias: "Media player paused/stopped"
  trigger:
    - platform: state
      entity_id: media_player.plex_web_chrome 
      from: 'playing'
      to: 'paused'
    - platform: state
      entity_id: media_player.plex_web_chrome
      from: 'playing'
      to: 'idle'
    - platform: state
      entity_id: media_player.projector
      from: 'playing'
      to: 'paused'
    - platform: state
      entity_id: media_player.projector
      from: 'playing'
      to: 'idle'
    - platform: state
      entity_id: media_player.kodi
      from: 'playing'
      to: 'paused'
    - platform: state
      entity_id: media_player.kodi
      from: 'playing'
      to: 'idle'
  condition:
    - condition: state
      entity_id: sun.sun
      state: 'below_horizon'
  action:
      service: scene.turn_on
      entity_id: scene.livingroom_normal

- id: media_player_playing
  alias: "Media player playing"
  trigger:
    - platform: state
      entity_id: media_player.plex_web_chrome
      to: 'playing'
      from: 'paused'
    - platform: state
      entity_id: media_player.plex_web_chrome
      to: 'playing'
      from: 'idle'
    - platform: state
      entity_id: media_player.projector
      to: 'playing'
      from: 'paused'
    - platform: state
      entity_id: media_player.projector
      to: 'playing'
      from: 'idle'
    - platform: state
      entity_id: media_player.kodi
      to: 'playing'
      from: 'paused'
    - platform: state
      entity_id: media_player.kodi
      to: 'playing'
      from: 'idle'
  condition:
    - condition: state
      entity_id: sun.sun
      state: 'below_horizon'
  action:
      service: scene.turn_on
      entity_id: scene.livingroom_dim
  



- id: water_dracaena
  alias: "Remind me to water our Dracaena"
  trigger:
    - platform: state
      entity_id: plant.dracaena_plant
      to: 'problem'
  action:
  - service: notify.html5push
    data_template:
      message: "Uh oh Dracaena says {{states.plant.dracaena.attributes.problem}}"
    
- id: thanks_dracaena
  alias: "Thank me for watering Dracaena"
  trigger:
    - platform: state
      entity_id: plant.dracaena_plant
      from: 'problem'
  action:
  - service: notify.html5push
    data_template:
      message: "Dracaena says thanks!"

- id: water_yucca
  alias: "Remind me to water our Yucca"
  trigger:
    - platform: state
      entity_id: plant.yucca
      to: 'problem'
  action:
  - service: notify.html5push
    data_template:
      message: "Uh oh yucca says {{states.plant.yucca.attributes.problem}}"
    
- id: thanks_yucca
  alias: "Thank me for watering Yucca"
  trigger:
    - platform: state
      entity_id: plant.yucca
      from: 'problem'
  action:
  - service: notify.html5push
    data_template:
      message: "Yucca says thanks!"

- id: water_bedroom_plant
  alias: "Remind me to water our Bedroom Plant"
  trigger:
    - platform: state
      entity_id: plant.bedroom_plant
      to: 'problem'
  action:
  - service: notify.html5push
    data_template:
      message: "Uh oh bedroom plant says {{states.plant.bedroom_plant.attributes.problem}}"
    
- id: thanks_bedroom_plant
  alias: "Thank me for watering Bedroom Plant"
  trigger:
    - platform: state
      entity_id: plant.bedroom_plant
      from: 'problem'
  action:
  - service: notify.html5push
    data_template:
      message: "Bedroom plant says thanks!"
- id: water_bedroomnew_plant
  alias: "Remind me to water our new Bedroom Plant"
  trigger:
    - platform: state
      entity_id: plant.bedroomnew_plant
      to: 'problem'
  action:
  - service: notify.html5push
    data_template:
      message: "Uh oh new bedroom plant says {{states.plant.bedroomnew_plant.attributes.problem}}"
    
- id: thanks_bedroomnew_plant
  alias: "Thank me for watering new Bedroom Plant"
  trigger:
    - platform: state
      entity_id: plant.bedroomnew_plant
      from: 'problem'
  action:
  - service: notify.html5push
    data_template:
      message: "New Bedroom plant says thanks!"

- alias: send_dwd_warning
  initial_state: True
  trigger:
    - platform: state
      entity_id: sensor.dwd_warn_count
    - platform: state
      entity_id: sensor.dwdweatherwarnings_current_warning_level
  condition:
    condition: template
    value_template: '{{ (trigger.to_state.state != trigger.from_state.state) and trigger.to_state.state | int > 0 }}'
  action:
  - service: notify.html5push
    data_template:
      message: "DWD Weather Warning! Check HA"

